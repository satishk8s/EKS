# This is a basic workflow to help you get started with Actions

name: EKS Cluster Creation

# Controls when the workflow will run
on:
  #push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Application Name'     
        required: true
        default: 'Please select application name'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  infra-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env: 
      AWS_ACCESS_KEY: '${{secrets.AWS_ACCESS_KEY_ID_VE}}'
      AWS_SECRET_ACCESS_KEY: '${{secrets.AWS_SECRET_ACCESS_KEY_VE}}'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          path: EKS
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.5
          
      - name: Install kubectl
        uses: qgxpagamentos/kubectl-set@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG_DATA }}
          kubectl-version: v1.21.5    
          
      # Runs a set of commands using the runners shell
      - name: infra-deploy
        run: |
          echo ${{ github.event.inputs.logLevel }}
          sudo apt-get -y update; sudo apt-get -y install git curl jq python3-pip zip; sudo apt-get -y install wget unzip
          sudo pip3 install -U awscliv2
          sudo curl -fsSL https://get.docker.com -o get-docker.sh
          aws --version
          sudo apt-get update -y
          sudo apt-get install -y curl apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          #sudo apt-get install -y vim git curl wget kubectl
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          which kubectl
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
          ls -la
          echo $AWS_ACCESS_KEY $AWS_SECRET_ACCESS_KEY  Pass.........
          aws configure set aws_access_key_id $AWS_ACCESS_KEY
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          pwd
          ls -la
          ls -lart
          terraform init --backend-config="access_key=$AWS_ACCESS_KEY" --backend-config="secret_key=$AWS_SECRET_ACCESS_KEY"
          terraform validate -no-color 
          terraform plan -no-color -var access_key=$AWS_ACCESS_KEY -var secret_key=$AWS_SECRET_ACCESS_KEY
          ls -la 
          terraform apply -auto-approve -no-color -var access_key=$AWS_ACCESS_KEY -var secret_key=$AWS_SECRET_ACCESS_KEY
